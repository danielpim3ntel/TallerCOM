/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.List;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author itz_l
 */
public class Ventana extends javax.swing.JFrame {

    DBConexion db = new DBConexion();
    Connection con = db.getConnetion();
    PreparedStatement pst;
    ResultSet rs;
    TimeZone tz = TimeZone.getTimeZone("GMT");
    Calendar cal = Calendar.getInstance(tz);
    JPanel jpanel;
    int offset;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    boolean fechaSeleccionada = false,admin,ex;
    int numMax = 10, idCl=0;
    String correoCl;
    
    //Connection con = null;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        TimeZone.setDefault(TimeZone.getTimeZone("GMT"));
        initComponents();
        this.setLocationRelativeTo(null);
        
        System.out.println("admin= "+InicioSesion.admin+" trab= "+InicioSesion.trab);
        if(InicioSesion.admin==1)
            admin=true;
        else
            admin=false;
    }
    
    @Override
    public Image getIconImage(){
        Image retValue=Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Img/Icono16.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        BtnSalir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        BtnInicio = new javax.swing.JButton();
        cajaHora = new javax.swing.JComboBox<>();
        calendar = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        boton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TxtAlias = new javax.swing.JTextField();
        BtnEnviar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        LblError2 = new javax.swing.JLabel();
        LblError = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LblError1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TallerCom");
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(60, 78, 89));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 75));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Encabezado.png"))); // NOI18N

        BtnSalir.setBackground(new java.awt.Color(60, 78, 89));
        BtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/apagar24px.png"))); // NOI18N
        BtnSalir.setContentAreaFilled(false);
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(212, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(176, 176, 176)
                .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel4.setPreferredSize(new java.awt.Dimension(394, 525));

        BtnInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/IconoInicio.png"))); // NOI18N
        BtnInicio.setContentAreaFilled(false);
        BtnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInicioActionPerformed(evt);
            }
        });

        cajaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaHoraActionPerformed(evt);
            }
        });

        calendar.getJCalendar().getMonthChooser().addPropertyChangeListener(new PropertyChangeListener(){
            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                try {
                    fechasInhabiles();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error en conexion" + ex);
                }
            }
        });
        calendar.setDateFormatString("yyyy/MM/dd HH:mm:ss");
        Calendar c = Calendar.getInstance(tz);
        c.add(Calendar.DATE, 1);
        calendar.setMinSelectableDate(c.getTime());
        calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarPropertyChange(evt);
            }
        });
        calendar.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                calendarVetoableChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setText("Fecha: ");

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel2.setText("Hora: ");

        boton.setBackground(new java.awt.Color(2, 166, 188));
        boton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        boton.setText("Agendar cita");
        boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel6.setText("Cliente");

        TxtAlias.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N

        BtnEnviar.setBackground(new java.awt.Color(2, 166, 188));
        BtnEnviar.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        BtnEnviar.setText("Enviar cita");
        BtnEnviar.setBorder(null);
        BtnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(boton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(18, 18, 18)
                            .addComponent(TxtAlias))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cajaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(TxtAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cajaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(BtnInicio)
                .addGap(90, 90, 90))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jPanel3.setBackground(new java.awt.Color(0, 179, 209));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 525));

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        jLabel4.setText("Agendar cita");

        LblError2.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        LblError2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblError2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        LblError.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        LblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblError.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/IconoCita.png"))); // NOI18N

        LblError1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        LblError1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblError1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LblError1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LblError, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(LblError2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addGap(82, 82, 82)
                .addComponent(LblError, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblError1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LblError2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActionPerformed
        
        String fecha = null;
        try{
            fecha = sdf.format(calendar.getDate());
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado una fecha");
        }
        
        String hora = cajaHora.getSelectedItem().toString().substring(3,5);
        String min = cajaHora.getSelectedItem().toString().substring(6,8);
        String sqlInsert,sql1 = "Select *from cliente",aliasdb="",alias="";
        
        System.out.println("Fecha:" + fecha);
        System.out.println("Hora:" + hora);
        System.out.println("Min:" + min);
        
        try {
            Statement pstInsert = con.createStatement();
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            
            if(ClienteEx()){
                sqlInsert = "INSERT INTO cita (fecha,idCliente) VALUES (\"" + fecha + " " + hora + ":" + min + ":00\",'"+idCl+"')"; 
                pst = con.prepareStatement(sqlInsert);
                pstInsert.executeUpdate(sqlInsert);
                //JOptionPane.showMessageDialog(this, "Cita generada con exito");
                LblError.setText("Cita generada exitosamente.");
                LblError1.setText("");
                LblError2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Correcto.png")));    
                System.out.println(sqlInsert);
                ex=false;
            }else{
                LblError.setText("Ese cliente no esta registrado");
                LblError1.setText("");
                LblError2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Incorrecto.png")));
            }    
            
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(this, "Error al generar cita");
            LblError.setText("Verifique que los datos ingresados");
            LblError1.setText(" sean correctos.");
            LblError2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Incorrecto.png")));
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        TxtAlias.setText("");
        ex=false;
    }//GEN-LAST:event_botonActionPerformed

    private void calendarVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_calendarVetoableChange

    }//GEN-LAST:event_calendarVetoableChange

    private void calendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarPropertyChange
        try {
            horasDisponibles();
        } catch (SQLException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_calendarPropertyChange

    private void cajaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaHoraActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioSesion().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void BtnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInicioActionPerformed
        // TODO add your handling code here:
        if(admin){
            this.setVisible(false);
            SesionAdmin frameAdmin= new SesionAdmin();
            frameAdmin.setVisible(true);
        }else{
            this.setVisible(false);
            SesionTrabajador frameTrab= new SesionTrabajador();
            frameTrab.setVisible(true);
        }
    }//GEN-LAST:event_BtnInicioActionPerformed

    private void BtnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEnviarActionPerformed
        // TODO add your handling code here:
         String fecha = null;
        try{
            fecha = sdf.format(calendar.getDate());
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado una fecha");
        }
        
        String hora = cajaHora.getSelectedItem().toString().substring(3,5);
        String min = cajaHora.getSelectedItem().toString().substring(6,8);
        
        
        Properties propiedad = new Properties();
        propiedad.setProperty("mail.smtp.host", "smtp.gmail.com");
        propiedad.setProperty("mail.smtp.starttls.enable", "true");
        propiedad.setProperty("mail.smtp.port", "25");
        propiedad.setProperty("mail.smtp.auth", "true");

        Session secion= Session.getDefaultInstance(propiedad);
        String  correoEnvia="tallercom.notas@gmail.com",contrasena="TallerCom20:21",destinatario=correoCl,asunto ="Cita TallerCom";

        MimeMessage mail=new MimeMessage(secion);
        
        try {
            mail.setFrom(new InternetAddress (correoEnvia));
            mail.addRecipient(Message.RecipientType.TO, new InternetAddress (destinatario));
            mail.setSubject(asunto);
            mail.setText("Su cita es el día "+fecha+" su horario:"+cajaHora.getSelectedItem());
            //mail.setContent(multiParte);
            //multiParte.addBodyPart(texto);
            Transport transporte= secion.getTransport("smtp");
            transporte.connect(correoEnvia,contrasena);
            transporte.sendMessage(mail, mail.getRecipients(Message.RecipientType.TO));
            transporte.close();

            //TxtAlias.setText("");

        } catch (AddressException ex) {
            Logger.getLogger(Nota.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MessagingException ex) {
            Logger.getLogger(Nota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnEnviarActionPerformed

    public void obtenerFechas(String mes, String anio) {
        offset = cal.get(Calendar.DAY_OF_WEEK) + 5; // 6 son las casillas que indican el dia de la semana
        jpanel = calendar.getJCalendar().getDayChooser().getDayPanel();
        Component component[] = jpanel.getComponents();

        String sql = "SELECT DAYOFMONTH(fecha) as day, MONTH(fecha) as month, YEAR(fecha) as year FROM ajuste WHERE MONTH(fecha) = ? AND YEAR(fecha) = ?";

        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, mes);
            pst.setString(2, anio);
            //System.out.println(pst);
            rs = pst.executeQuery();

            while (rs.next()) {
                //System.out.println("Entro");
                int dayOfMonth = rs.getInt("day");
                //int month = rs.getInt("month");
                //int year = rs.getInt("year");
                if (comprobacionDia(dayOfMonth)) {
                    component[offset + dayOfMonth].setBackground(Color.red);
                }
            }
            pst.close();
            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public boolean comprobacionDia(int dia) throws SQLException {
        int num = 0;
        String sqlNum = "SELECT count(fecha) as num FROM ajuste WHERE DAYOFMONTH(fecha) = " + dia;
        PreparedStatement pstNum = con.prepareStatement(sqlNum);
        ResultSet rsNum = pstNum.executeQuery();
        if (rsNum.next()) {
            num = rsNum.getInt("num");
        }
        return num == numMax;
    }

    public boolean comprobacion(String dia, String mes, String anio) throws SQLException {
        int num = 0;
        String sqlNum = "SELECT count(fecha) as num FROM ajuste WHERE DAYOFMONTH(fecha) = ? AND MONTH(fecha) = ? AND YEAR(fecha) = ?";
        PreparedStatement pstNum = con.prepareStatement(sqlNum);
        pstNum.setString(1, dia);
        pstNum.setString(2, mes);
        pstNum.setString(3, anio);

        ResultSet rsNum = pstNum.executeQuery();
        if (rsNum.next()) {
            num = rsNum.getInt("num");
        }
        return num == numMax;
    }

    public void fechasInhabiles() throws SQLException {
        //System.out.println("Realizando cambios...");
        cal.set(calendar.getJCalendar().getYearChooser().getYear(), calendar.getJCalendar().getMonthChooser().getMonth(), 1);
        obtenerFechas(Integer.toString(calendar.getJCalendar().getMonthChooser().getMonth() + 1),
                Integer.toString(calendar.getJCalendar().getYearChooser().getYear()));
    }

    private void horasDisponibles() throws SQLException {
        cajaHora.removeAllItems();
        //TimeZone.setDefault(TimeZone.getTimeZone("GMT"));
        String dia = Integer.toString(calendar.getJCalendar().getDayChooser().getDay());
        String mes = Integer.toString(calendar.getJCalendar().getMonthChooser().getMonth() + 1);
        String anio = Integer.toString(calendar.getJCalendar().getYearChooser().getYear());

        System.out.println("Dia" + dia + "Mes" + mes + "Anio" + anio);

        if (comprobacion(dia, mes, anio)) {
            cajaHora.addItem("No hay horas disponibles en el dia seleccionado");
        } else {
            mostrarHrs(dia, mes, anio);
        }

    }

    public void mostrarHrs(String dia, String mes, String anio) throws SQLException {
        Calendar calV = Calendar.getInstance(tz);
        calV.set(Calendar.HOUR_OF_DAY, 7);
        calV.set(Calendar.MINUTE, 00);
        calV.set(Calendar.SECOND, 0);
        calV.set(Calendar.MILLISECOND, 0);

        DateFormat time = new SimpleDateFormat("hh:mm aa");
        
        do{
            int hora = calV.getTime().getHours();
            int min = calV.getTime().getMinutes();
            String sqlNum = "SELECT date_format(fecha, '%H-%i') as time FROM ajuste WHERE DAYOFMONTH(fecha) = ? AND MONTH(fecha) = ? AND YEAR(fecha) = ?"
                    + " AND HOUR(fecha) = ? AND MINUTE(fecha) = ?";
            PreparedStatement pstNum = con.prepareStatement(sqlNum);
            pstNum.setString(1, dia);
            pstNum.setString(2, mes);
            pstNum.setString(3, anio);
            pstNum.setString(4, Integer.toString(hora));
            pstNum.setString(5, Integer.toString(min));
            ResultSet rsNum = pstNum.executeQuery();
            if (rsNum.next()) {
                
            }
            else{
                Date date = calV.getTime();
                String tiempo = "De " + time.format(date);
                System.out.print("De " + time.format(date));
                
                date.setMinutes(date.getMinutes() + 90);
                tiempo += " a " + time.format(date);
                System.out.println(" a " + time.format(date));
                
                cajaHora.addItem(tiempo);
            }

            calV.add(Calendar.MINUTE, 90);
        } while (calV.getTime().getHours() != 22);

    }

    public void fechaNoDisponible() throws SQLException {
        System.out.println("Se ha cambiado la fecha");

        Calendar calVirtual = Calendar.getInstance();
        calVirtual.set(Calendar.DAY_OF_MONTH, calendar.getJCalendar().getDayChooser().getDay());
        int dia = calVirtual.get(Calendar.DAY_OF_MONTH);

        //if(comprobacion(dia))
        //  calendar.getDateEditor().getUiComponent().setBackground(Color.RED);
    }
    
    public boolean ClienteEx(){
        String sql1 = "Select *from cliente",aliasdb="",alias="";
         try {
            Statement pstInsert = con.createStatement();
            
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();

            while (rs.next()) {
                alias=TxtAlias.getText();
                aliasdb=rs.getString("alias");
                if (aliasdb.equals(alias)){
                    ex= true;
                    idCl=rs.getInt("id");
                    correoCl=rs.getString("correo");
                    System.out.println("El cliente existe.");
                    break;
                }else
                    ex= false;
            } 
            
        } catch (SQLException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
         return ex;
    }
            
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEnviar;
    private javax.swing.JButton BtnInicio;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JLabel LblError;
    private javax.swing.JLabel LblError1;
    private javax.swing.JLabel LblError2;
    private javax.swing.JTextField TxtAlias;
    private javax.swing.JButton boton;
    private javax.swing.JComboBox<String> cajaHora;
    private com.toedter.calendar.JDateChooser calendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables

}
